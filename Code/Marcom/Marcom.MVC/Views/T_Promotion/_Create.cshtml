@model Marcom.ViewModel.T_MarketingPromotionViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Marketing Promotion</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="box">
            <div class="box-header">
                <h5><b>Marketing Header Promotion</b></h5>
            </div>
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Promotion.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Promotion.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Promotion.Code, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Promotion.RequestBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Promotion.RequestBy, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Promotion.RequestBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Promotion.TEventCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Promotion.TEventCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Promotion.TEventCode, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Promotion.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Promotion.RequestDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Promotion.RequestDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Promotion.TitleHeader, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Promotion.TitleHeader, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Promotion.TitleHeader, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Promotion.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.TextAreaFor(model => model.Promotion.Note, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Promotion.Note, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="box">
            <div class="box-header">
                <h5><b>Design Header Information</b></h5>
            </div>
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Design.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Design.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Design.Code, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Design.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.TextAreaFor(model => model.Design.Note, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Design.Note, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Design.TitleHeader, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Design.TitleHeader, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Design.TitleHeader, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Design.RequestBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Design.RequestBy, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Design.RequestBy, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Design.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Design.RequestDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Design.RequestDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="box">
            <div class="box-header">
                <h5><b>Design Item Information</b></h5>
            </div>
            <div class="box-body">
                <div class="col-lg-12">
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Product Description</th>
                                <th>Title</th>
                                <th>Qty</th>
                                <th>Todo</th>
                                <th>Due Date</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Note</th>
                                <th></th>
                            </tr>
                        </thead>

                        <tbody id="dItem-list"></tbody>

                        <tfoot>

                        </tfoot>
                    </table>

                </div>
            </div>
        </div>

        <div class="box">
            <div class="box-header">
                <h5><b>Upload File</b></h5>
            </div>
            <div class="box-body">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

</script>