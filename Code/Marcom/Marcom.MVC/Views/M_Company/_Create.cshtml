@model Marcom.ViewModel.M_CompanyViewModel


@using (Html.BeginForm("", "M_Company", FormMethod.Post, new { id = "create-form", name = "create-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "CPXXXX" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>


            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                @*<div class="col-md-8">
                    @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", required = "required"})
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>*@
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-default pull-right" data-dismiss="modal">
                    Cancel
                </button>
                <input type="submit" id="btn-save" class="btn btn-default btn-success pull-right" value="Create" />
                
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $("#create-form").submit(function () {

        var code = document.getElementById('Code').value;
        var name = document.getElementById('Name').value;
        var address = document.getElementById('Address').value;
        var email = document.getElementById('Email').value;
        var phone = document.getElementById('Phone').value;

        var data = { Code: code, Name: name, Address: address, Email: email, Phone: phone };
        //alert(JSON.stringify(data));

        $.ajax({
            url: "http://localhost:50876/api/M_Companies",
            type: 'post',
            contentType: 'application/json',
            dataType: 'json',
            data: JSON.stringify(data),
            success: function (result) {
                if (result.Success) {
                    alert("Success");
                    $("#modal-Form").modal("hide");
                    ShowList();
                }
                else {
                    //alert("error : " + result.Message);
                }
            },
            error: function (err) {
                alert(err);
            }
        })
        //return false;
    })
</script>
