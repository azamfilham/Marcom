@model Marcom.ViewModel.T_SouvenirViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly="readonly"} })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.ReceivedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control valid" data-val="true" id="EmployeeReceived" name="EmployeeReceived">
                    <option value="0">Select Employee</option>
                </select>
                @Html.ValidationMessageFor(model => model.ReceivedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReceivedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReceivedDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.ReceivedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" id="btn-save" class="btn btn-default btn-info">
                    Save
                </button>
            </div>
        </div>
    </div>
}

    @Scripts.Render("~/bundles/jqueryval")

<script>

    $(document).ready(function () {
        SetEmployeeReceived(@Model.ReceivedBy);
    })

    $(".datepicker").datepicker({
        format: 'dd M yyyy',

    })

    function SetEmployeeReceived(EmployeeReceived) {
        $.ajax({
            url: 'http://localhost:50876/api/M_Employees',
            type: 'GET',
            success: function (result) {
                $.each(result, function (i, item) {
                    var option = '<option value="' + item.Id + '">' + item.EmployeeName + '</option>';
                    $('#EmployeeReceived').append(option);
                })
                $('#EmployeeReceived').val(EmployeeReceived);
            },
            error: function (err) {
                alert(err);
            }
        })
    }

    $("#btn-save").click(function () {

        var transactionCode = document.getElementById('Code').value;
        var rcvDate = document.getElementById('ReceivedDate').value;
        var note = document.getElementById('Note').value;

        var empRcv = document.getElementById('EmployeeReceived');
        //alert(mMenuId.selectedIndex);
        //alert(mMenuId.options[mMenuId.selectedIndex].value);
        var empRcvv = empRcv.options[empRcv.selectedIndex].value;
        
        var now = new Date();

        var data = { ReceivedBy: empRcvv, ReceivedDate: rcvDate, Note: note, Type: "Additional", TEventId: 1, CreatedBy: "Admin", CreatedDate: now, Code: transactionCode, RequestBy: empRcvv };

        //alert(JSON.stringify(data));
        var id = @Model.Id;
        $.ajax({
            url: "http://localhost:50876/api/T_Souvenirs/" + id,
            type: 'put',
            contentType: 'application/json',
            dataType: 'json',
            data: JSON.stringify(data),
            success: function (result) {
                if (result.Success) {
                    alert("Success");
                    $("#modal-Form").modal("hide");
                    ItemList();
                }
                else {
                    alert("error : " + result.Message);
                }
            },
            error: function (err) {
                alert(err);
            }
        })
    })


</script>